name: 🧪 Tests & Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: ⚙️ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r functions/email_router/requirements.txt
        pip install pytest pytest-cov black flake8 mypy
        
    - name: 🔧 Create mock secrets for testing
      run: |
        mkdir -p .secrets
        echo "GOOGLE_API_KEY=test_key_for_ci" > .secrets/.env
        echo "GOOGLE_CLOUD_PROJECT=test-project" >> .secrets/.env
        echo '{"test": "oauth_client"}' > .secrets/oauth_client.json
        echo '{"test": "token"}' > .secrets/token.json
        
    - name: 🎨 Check code formatting with Black
      run: black --check src/ --line-length=88
      
    - name: 🔍 Lint with flake8
      run: flake8 src/ --max-line-length=88 --count --statistics
      
    - name: 🏷️ Type check with mypy
      run: mypy src/ --ignore-missing-imports
      continue-on-error: true  # Don't fail CI on type errors for now
      
    - name: 🧪 Run tests with pytest
      run: |
        python -m pytest tests/ -v --tb=short --cov=src/ --cov-report=xml
        
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run security checks
      run: |
        # Check for secrets in code (basic check)
        ! grep -r "sk-" src/ || (echo "❌ Potential API keys found" && exit 1)
        ! grep -r "AIza" src/ || (echo "❌ Potential Google API keys found" && exit 1)
        echo "✅ No obvious secrets found in source code"
        
    - name: 🛡️ Check for sensitive files
      run: |
        # Ensure no actual secret files are committed
        if [ -f ".secrets/.env" ] && grep -q "sk-\|AIza" .secrets/.env; then
          echo "❌ Real secrets found in .env file"
          exit 1
        fi
        echo "✅ No sensitive data in committed files"

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: 📦 Test package installation
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: 🏗️ Test import
      run: |
        python -c "from email_router.core.ingest_email import ingest_email; print('✅ Import successful')"
        
    - name: ✅ Build validation complete
      run: echo "🎉 All checks passed! Ready for deployment." 